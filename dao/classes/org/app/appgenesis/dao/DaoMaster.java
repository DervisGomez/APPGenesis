package org.app.appgenesis.dao;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;
import de.greenrobot.dao.AbstractDaoMaster;
import de.greenrobot.dao.identityscope.IdentityScopeType;

import org.app.appgenesis.dao.PersonaDao;
import org.app.appgenesis.dao.OrdePersDao;
import org.app.appgenesis.dao.MaterialDao;
import org.app.appgenesis.dao.OrdeMateDao;
import org.app.appgenesis.dao.DibujoDao;
import org.app.appgenesis.dao.FirmaDao;
import org.app.appgenesis.dao.ComentarioDao;
import org.app.appgenesis.dao.FotografiaDao;
import org.app.appgenesis.dao.Gop_ordeatriDao;
import org.app.appgenesis.dao.GOP_ATRIBUTOSDao;
import org.app.appgenesis.dao.GOP_ORDEESTADao;
import org.app.appgenesis.dao.Gma_costtitrDao;
import org.app.appgenesis.dao.Gro_ordenDao;
import org.app.appgenesis.dao.UnidadMedidaDao;
import org.app.appgenesis.dao.GMA_CAUSALDao;
import org.app.appgenesis.dao.OrdecostDao;
import org.app.appgenesis.dao.GMA_PKIDDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * Master of DAO (schema version 1): knows all DAOs.
*/
public class DaoMaster extends AbstractDaoMaster {
    public static final int SCHEMA_VERSION = 1;

    /** Creates underlying database table using DAOs. */
    public static void createAllTables(SQLiteDatabase db, boolean ifNotExists) {
        PersonaDao.createTable(db, ifNotExists);
        OrdePersDao.createTable(db, ifNotExists);
        MaterialDao.createTable(db, ifNotExists);
        OrdeMateDao.createTable(db, ifNotExists);
        DibujoDao.createTable(db, ifNotExists);
        FirmaDao.createTable(db, ifNotExists);
        ComentarioDao.createTable(db, ifNotExists);
        FotografiaDao.createTable(db, ifNotExists);
        Gop_ordeatriDao.createTable(db, ifNotExists);
        GOP_ATRIBUTOSDao.createTable(db, ifNotExists);
        GOP_ORDEESTADao.createTable(db, ifNotExists);
        Gma_costtitrDao.createTable(db, ifNotExists);
        Gro_ordenDao.createTable(db, ifNotExists);
        UnidadMedidaDao.createTable(db, ifNotExists);
        GMA_CAUSALDao.createTable(db, ifNotExists);
        OrdecostDao.createTable(db, ifNotExists);
        GMA_PKIDDao.createTable(db, ifNotExists);
    }
    
    /** Drops underlying database table using DAOs. */
    public static void dropAllTables(SQLiteDatabase db, boolean ifExists) {
        PersonaDao.dropTable(db, ifExists);
        OrdePersDao.dropTable(db, ifExists);
        MaterialDao.dropTable(db, ifExists);
        OrdeMateDao.dropTable(db, ifExists);
        DibujoDao.dropTable(db, ifExists);
        FirmaDao.dropTable(db, ifExists);
        ComentarioDao.dropTable(db, ifExists);
        FotografiaDao.dropTable(db, ifExists);
        Gop_ordeatriDao.dropTable(db, ifExists);
        GOP_ATRIBUTOSDao.dropTable(db, ifExists);
        GOP_ORDEESTADao.dropTable(db, ifExists);
        Gma_costtitrDao.dropTable(db, ifExists);
        Gro_ordenDao.dropTable(db, ifExists);
        UnidadMedidaDao.dropTable(db, ifExists);
        GMA_CAUSALDao.dropTable(db, ifExists);
        OrdecostDao.dropTable(db, ifExists);
        GMA_PKIDDao.dropTable(db, ifExists);
    }
    
    public static abstract class OpenHelper extends SQLiteOpenHelper {

        public OpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory, SCHEMA_VERSION);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            Log.i("greenDAO", "Creating tables for schema version " + SCHEMA_VERSION);
            createAllTables(db, false);
        }
    }
    
    /** WARNING: Drops all table on Upgrade! Use only during development. */
    public static class DevOpenHelper extends OpenHelper {
        public DevOpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory);
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            Log.i("greenDAO", "Upgrading schema from version " + oldVersion + " to " + newVersion + " by dropping all tables");
            dropAllTables(db, true);
            onCreate(db);
        }
    }

    public DaoMaster(SQLiteDatabase db) {
        super(db, SCHEMA_VERSION);
        registerDaoClass(PersonaDao.class);
        registerDaoClass(OrdePersDao.class);
        registerDaoClass(MaterialDao.class);
        registerDaoClass(OrdeMateDao.class);
        registerDaoClass(DibujoDao.class);
        registerDaoClass(FirmaDao.class);
        registerDaoClass(ComentarioDao.class);
        registerDaoClass(FotografiaDao.class);
        registerDaoClass(Gop_ordeatriDao.class);
        registerDaoClass(GOP_ATRIBUTOSDao.class);
        registerDaoClass(GOP_ORDEESTADao.class);
        registerDaoClass(Gma_costtitrDao.class);
        registerDaoClass(Gro_ordenDao.class);
        registerDaoClass(UnidadMedidaDao.class);
        registerDaoClass(GMA_CAUSALDao.class);
        registerDaoClass(OrdecostDao.class);
        registerDaoClass(GMA_PKIDDao.class);
    }
    
    public DaoSession newSession() {
        return new DaoSession(db, IdentityScopeType.Session, daoConfigMap);
    }
    
    public DaoSession newSession(IdentityScopeType type) {
        return new DaoSession(db, type, daoConfigMap);
    }
    
}
